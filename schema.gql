# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Like {
  id: ID!
  createdAt: DateTime!
  user: User!
  userId: Float!
  post: Post!
  postId: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Answer {
  id: ID!
  createdAt: DateTime!
  text: String!
  question: Question!
}

type Question {
  id: ID!
  createdAt: DateTime!
  text: String!
  user: User!
  userId: Float!
  post: Post!
  answer: Answer
}

type Post {
  id: ID!
  createdAt: DateTime!
  title: String!
  description: String!
  category: postCategory!
  date: DateTime!
  rigion: postRigion!
  adress: String!
  host: String!
  NumOfRecruitment: Float!
  recognizedHours: Float!
  isOpened: Boolean!
  isCompleted: Boolean!
  isMine: Boolean
  isLiked: Boolean
  user: User!
  userId: Float!
  applications: [Application!]
  likes: [Like!]
  questions: [Question!]
}

enum postCategory {
  environment
  eventSupport
  communityService
  ruralAtivity
}

enum postRigion {
  Seoul
  Gyeonggi
  Incheon
  Chungcheong
  Jeolla
  Gyeongsang
  Jeju
}

type Application {
  id: ID!
  createdAt: DateTime!
  isAccepted: Boolean!
  user: User!
  userId: Float!
  post: Post!
  postId: Float!
}

type User {
  id: ID!
  createdAt: DateTime!
  email: String!
  username: String!
  password: String!
  avatar: String
  isSelf: Boolean
  posts: [Post!]
  applications: [Application!]
  likes: [Like!]
  questions: [Question!]
}

type CommonOutput {
  ok: Boolean!
  error: String
}

type GetProfileOutput {
  ok: Boolean!
  error: String
  user: User
}

type SignInOutput {
  ok: Boolean!
  error: String
  token: String
}

type SignUpOutput {
  ok: Boolean!
  error: String
  token: String
}

type GetMyPostsOutput {
  ok: Boolean!
  error: String
  posts: [Post!]
}

type GetPostDetailOutput {
  ok: Boolean!
  error: String
  post: Post
}

type GetPostsOutput {
  ok: Boolean!
  error: String
  posts: [Post!]
  totalCount: Float
  totalPage: Float
}

type Query {
  hi: String!
  getToken(userId: Float!): String!
  decodeToken(token: String!): String!
  getProfile(userId: Float!): GetProfileOutput!
  getAllPosts: [Post!]!
  getPostDetail(postId: Float!): GetPostDetailOutput!
  getMyPosts: GetMyPostsOutput!
  getPosts(data: GetPostsInput!): GetPostsOutput!
  getAllApplications: [Application!]!
}

input GetPostsInput {
  categories: [postCategory!] = [communityService, environment, eventSupport, ruralAtivity]
  rigions: [postRigion!] = [Seoul, Gyeonggi, Incheon, Chungcheong, Gyeongsang, Jeolla, Jeju]
  page: Float!
  openOnly: Boolean = true
  searchTerm: String
}

type Mutation {
  signUp(data: SignUpInput!): SignUpOutput!
  signIn(data: SignInInput!): SignInOutput!
  createPost(data: CreatePostInput!): CommonOutput!
  editPost(postId: Float!, data: EditPostInput!): CommonOutput!
  toggleOpenAndClose(postId: Float!): CommonOutput!
  deletePost(postId: Float!): CommonOutput!
  completePost(postId: Float!): CommonOutput!
  applyForPost(postId: Float!): CommonOutput!
  toggleAccept(applicationId: Float!): CommonOutput!
  cancelApplication(applicationId: Float!): CommonOutput!
  toggleLike(postId: Float!): CommonOutput!
  createQuestion(text: String!, postId: Float!): CommonOutput!
  deleteQuestion(questionId: Float!): CommonOutput!
}

input SignUpInput {
  email: String!
  username: String!
  password: String!
}

input SignInInput {
  email: String!
  password: String!
}

input CreatePostInput {
  title: String!
  description: String!
  category: postCategory!
  date: DateTime!
  rigion: postRigion!
  adress: String!
  host: String!
  NumOfRecruitment: Float!
  recognizedHours: Float!
}

input EditPostInput {
  title: String
  description: String
  category: postCategory
  date: DateTime
  rigion: postRigion
  adress: String
  host: String
  NumOfRecruitment: Float
  recognizedHours: Float
}
